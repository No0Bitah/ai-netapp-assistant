version: "3.9"

services:
  postgres:
    image: postgres:16
    env_file: [.env.backend, .env]
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-aiuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-aisecret}
      POSTGRES_DB: ${POSTGRES_DB:-ainetapp}
    ports: ["${POSTGRES_PORT:-5432}:5432"]
    volumes: ["pgdata:/var/lib/postgresql/data"]
    healthcheck: { test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"], interval: 5s, timeout: 5s, retries: 10 }

  redis:
    image: redis:7-alpine
    ports: ["${REDIS_PORT}:6379"]

  # mailhog:
  #   image: mailhog/mailhog:latest
  #   ports: ["${MAILHOG_UI_PORT}:8025", "${MAILHOG_SMTP_PORT}:1025"]

  api:
    build: ./backend
    env_file: [.env.backend, .env]
    depends_on:
      - postgres
      - redis
    ports: ["${API_PORT}:8000"]
    volumes:
      - ./backend:/app
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  worker:
    build: ./backend
    env_file: [.env.backend, .env]
    depends_on: [api, redis]
    volumes:
      - ./backend:/app
    command: ["celery", "-A", "app.workers.celery_app", "worker", "--loglevel=INFO"]

  beat:
    build: ./backend
    env_file: [.env.backend, .env]
    depends_on: [api, redis]
    volumes:
      - ./backend:/app
    command: ["celery", "-A", "app.workers.celery_app", "beat", "--loglevel=INFO"]

  frontend:
    build: ./frontend
    env_file: [.env.frontend, .env]
    depends_on: [api]
    ports: ["${FRONTEND_PORT}:5173"]
    volumes:
      - ./frontend:/usr/src/app
    command: ["pnpm", "dev", "--host"]

  # loki:
  #   image: grafana/loki:2.9.2
  #   command: ["-config.file=/etc/loki/local-config.yml"]
  #   volumes:
  #     - ./ops/loki/loki-config.yml:/etc/loki/local-config.yml
  #   ports: ["${LOKI_PORT}:3100"]

  # prom:
  #   image: prom/prometheus:v2.52.0
  #   volumes:
  #     - ./ops/prom/prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports: ["${PROM_PORT}:9090"]

  # grafana:
  #   image: grafana/grafana:10.4.5
  #   ports: ["${GRAFANA_PORT}:3000"]
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   depends_on: [prom, loki]

volumes:
  pgdata: